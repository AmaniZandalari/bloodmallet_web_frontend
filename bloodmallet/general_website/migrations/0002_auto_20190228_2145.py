# Generated by Django 2.1.5 on 2019-02-28 20:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import general_website.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general_website', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FightStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tokenized_name', models.CharField(max_length=16)),
                ('pretty_name', models.CharField(max_length=16)),
                ('description', models.TextField(blank=True, max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fight_style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_results', to='general_website.FightStyle')),
            ],
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, help_text='Pending, in progress, done, aborted, crashed.', max_length=16)),
                ('progress', models.SmallIntegerField(help_text="0-100, but 100 doesn't mean, that the data is available. Simulation reached 100%, though.")),
                ('log', models.TextField(blank=True, help_text='Log messages from the responsible worker.')),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pretty_name', models.CharField(max_length=32)),
                ('tokenized_name', models.CharField(max_length=32)),
                ('faction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='races', to='general_website.Faction')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Uuid used to identify a specific simulation.')),
                ('result', models.FileField(upload_to=general_website.models.save_simulation_result)),
                ('simc_hash', models.CharField(blank=True, help_text='SimulationCraft commit hash to identify the used version. (Allows reproduction of a result.)', max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_input', models.TextField(blank=True, help_text='Define your own character here, instead of using the standard profile (your input will overwrite the standard profile).', max_length=2048)),
                ('fight_style_input', models.TextField(blank=True, help_text='Define your own fight_style.', max_length=2048)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('failed', models.BooleanField(default=False, help_text='If Simulation failed somehow this bool is set to True. Otherwise stays False forever.')),
                ('fight_style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='general_website.FightStyle')),
            ],
        ),
        migrations.CreateModel(
            name='SimulationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the simulation type. Like 'trinket simulations'.", max_length=32)),
                ('command', models.CharField(help_text="Actual command for bloodytools to do the simulation type. E.g. 'trinkets'", max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='WowClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tokenized_name', models.CharField(max_length=16)),
                ('pretty_name', models.CharField(max_length=16)),
                ('races', models.ManyToManyField(related_name='classes', to='general_website.Race')),
            ],
        ),
        migrations.CreateModel(
            name='WowSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pretty_name', models.CharField(max_length=16)),
                ('tokenized_name', models.CharField(max_length=16)),
                ('wow_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wow_specs', to='general_website.WowClass')),
            ],
        ),
        migrations.AddField(
            model_name='simulation',
            name='simulation_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='general_website.SimulationType'),
        ),
        migrations.AddField(
            model_name='simulation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='simulation',
            name='wow_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='general_website.WowClass'),
        ),
        migrations.AddField(
            model_name='simulation',
            name='wow_spec',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='general_website.WowSpec'),
        ),
        migrations.AddField(
            model_name='result',
            name='simulation',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='general_website.Simulation'),
        ),
        migrations.AddField(
            model_name='queue',
            name='simulation',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='general_website.Simulation'),
        ),
        migrations.AddField(
            model_name='generalresult',
            name='result',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='general_result', to='general_website.Result'),
        ),
        migrations.AddField(
            model_name='generalresult',
            name='simulation_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_results', to='general_website.SimulationType'),
        ),
        migrations.AddField(
            model_name='generalresult',
            name='wow_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_results', to='general_website.WowClass'),
        ),
        migrations.AddField(
            model_name='generalresult',
            name='wow_spec',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='general_result', to='general_website.WowSpec'),
        ),
    ]
